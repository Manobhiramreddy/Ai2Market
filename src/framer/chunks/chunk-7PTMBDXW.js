// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project ac4b2f1e7a67ec54 "Alytics (copy)", do not edit manually */
// /:https://framerusercontent.com/modules/8hClElAOIaaajL8AZAy4/lW9JT8bmGAkPu718Mkh9/ABsuyIg6b.js
import { jsx as _jsx } from "react/jsx-runtime";
import { addFonts, addPropertyControls, ControlType, cx, getLoadingLazyAtYPosition, Image, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var cycleOrder = ["xX7AumIet", "kmOMwFHMr"];
var serializationHash = "framer-Nlg19";
var variantClassNames = { kmOMwFHMr: "framer-v-14fpn9e", xX7AumIet: "framer-v-bkwy9o" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = { bounce: 0.2, delay: 0, duration: 0.4, type: "spring" };
var toResponsiveImage = (value) => {
  if (typeof value === "object" && value !== null && typeof value.src === "string") {
    return value;
  }
  return typeof value === "string" ? { src: value } : void 0;
};
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = { "Logo Mirror (Tab)": "kmOMwFHMr", "Logo Mirror": "xX7AumIet" };
var getProps = ({ height, id, image, width, ...props }) => {
  return { ...props, lDwR4dXJL: image ?? props.lDwR4dXJL, variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "xX7AumIet" };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const { style, className, layoutId, variant, lDwR4dXJL, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ cycleOrder, defaultVariant: "xX7AumIet", ref: refBinding, variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  return /* @__PURE__ */ _jsx(LayoutGroup, { id: layoutId ?? defaultLayoutId, children: /* @__PURE__ */ _jsx(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx(Transition, { value: transition1, children: /* @__PURE__ */ _jsx(motion.div, { ...restProps, ...gestureHandlers, className: cx(scopingClassNames, "framer-bkwy9o", className, classNames), "data-framer-name": "Logo Mirror", layoutDependency, layoutId: "xX7AumIet", ref: refBinding, style: { backgroundColor: "var(--token-469374a6-bb69-4bd2-9e1b-0aebf435f73e, rgb(248, 248, 248))", borderBottomLeftRadius: 12, borderBottomRightRadius: 12, borderTopLeftRadius: 12, borderTopRightRadius: 12, boxShadow: "0px 0px 0px 6px var(--token-17335ab3-e89a-4abd-b59b-d74d2f34afb2, rgb(255, 255, 255)), 0px 0.6021873017743928px 0.421531111242075px -0.9166666666666666px rgba(0, 0, 0, 0.05), 0px 2.288533303243457px 1.60197331227042px -1.8333333333333333px rgba(0, 0, 0, 0.05), 0px 10px 7px -2.75px rgba(0, 0, 0, 0.04), 0px -0.6021873017743928px 0.5419685715969536px -1.0833333333333333px rgba(0, 0, 0, 0.06), 0px -2.288533303243457px 2.0596799729191115px -2.1666666666666665px rgba(0, 0, 0, 0.05), 0px -10px 9px -3.25px rgba(0, 0, 0, 0.03), 0.6021873017743928px 0px 0.5419685715969536px -1.1666666666666665px rgba(0, 0, 0, 0.06), 2.288533303243457px 0px 2.0596799729191115px -2.333333333333333px rgba(0, 0, 0, 0.05), 10px 0px 9px -3.5px rgba(0, 0, 0, 0.03), -0.6021873017743928px 0px 0.6021873017743928px -1.1666666666666665px rgba(0, 0, 0, 0.06), -2.288533303243457px 0px 2.288533303243457px -2.333333333333333px rgba(0, 0, 0, 0.05), -10px 0px 10px -3.5px rgba(0, 0, 0, 0.03)", ...style }, variants: { kmOMwFHMr: { borderBottomLeftRadius: 8, borderBottomRightRadius: 8, borderTopLeftRadius: 8, borderTopRightRadius: 8 } }, ...addPropertyOverrides({ kmOMwFHMr: { "data-framer-name": "Logo Mirror (Tab)" } }, baseVariant, gestureVariant), children: /* @__PURE__ */ _jsx(Image, { background: { alt: "", fit: "fill", loading: getLoadingLazyAtYPosition((componentViewport?.y || 0) + 0), pixelHeight: 160, pixelWidth: 160, sizes: componentViewport?.width || "100vw", ...toResponsiveImage(lDwR4dXJL) }, className: "framer-10041b2", layoutDependency, layoutId: "LrslqlfOM" }) }) }) }) });
});
var css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-Nlg19.framer-168xnx9, .framer-Nlg19 .framer-168xnx9 { display: block; }", ".framer-Nlg19.framer-bkwy9o { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: 80px; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 80px; will-change: var(--framer-will-change-override, transform); }", ".framer-Nlg19 .framer-10041b2 { bottom: 0px; flex: none; left: 0px; overflow: visible; position: absolute; right: 0px; top: 0px; z-index: 1; }", ".framer-Nlg19.framer-v-14fpn9e.framer-bkwy9o { aspect-ratio: 1 / 1; height: var(--framer-aspect-ratio-supported, 65px); width: 65px; }"];
var FramerABsuyIg6b = withCSS(Component, css, "framer-Nlg19");
var stdin_default = FramerABsuyIg6b;
FramerABsuyIg6b.displayName = "Logo floating";
FramerABsuyIg6b.defaultProps = { height: 80, width: 80 };
addPropertyControls(FramerABsuyIg6b, { variant: { options: ["xX7AumIet", "kmOMwFHMr"], optionTitles: ["Logo Mirror", "Logo Mirror (Tab)"], title: "Variant", type: ControlType.Enum }, lDwR4dXJL: { title: "Image", type: ControlType.ResponsiveImage } });
addFonts(FramerABsuyIg6b, [{ explicitInter: true, fonts: [] }], { supportsExplicitInterCodegen: true });

export {
  stdin_default
};
